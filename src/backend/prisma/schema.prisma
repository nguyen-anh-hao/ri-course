// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  username String  @unique
  password String
  email    String?
  roles    Role[]

  fullname String?
  dob      DateTime?

  courses Enrollment[]

  auditLogs AuditLog[] @relation("changed")
  auditedLogs AuditLog[] @relation("changer")
}

model Course {
  id        Int      @id @default(autoincrement())
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String

  users Enrollment[]
}

model Enrollment {
  userId   Int
  user User @relation(fields: [userId], references: [id])

  courseId Int
  course Course @relation(fields: [courseId], references: [id])

  createdAt DateTime @default(now())
  level     String?

  @@id([userId, courseId])
}

enum Role {
  Admin
  Learner
  Mentor
}

model AuditLog {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())

  actionType String

  userId Int
  changedUser User @relation("changed", fields: [userId], references: [id])

  adminId Int
  changer User @relation("changer", fields: [adminId],  references: [id])

  before Json?
  after Json?
}